################################################################################
# Revel configuration file
# More info at http://revel.github.io/manual/appconf.html
################################################################################

# Revel build section
# This section contains values that are not reloadable
################################################################################

# Comma delimited list of folders that are included with the package, or build commands
# If you want to not include folders within these ones prefix the folder with a . to make it hidden
package.folders = conf, public, app/views




# Revel reconfigurable section
#
################################################################################

# Удобочитаемое название приложения. Используется в некоторых консольных выводах и отладочных веб страницах.
app.name = sample-project

# Секретная строка, которая передается для криптографической подписи cookie для предотвращения
# (и обнаружения) модификации пользователя.
# Сохраните эту строку в секрете, иначе пользователи смогут вводить произвольные значения cookie
# в ваше приложение
app.secret = 9zSPtiMThjAGJqeVYvEGHI56t5iqDpZ8k3A9hwVTYEXW6yHWvaILCg6Nkviufikf

# Revel запускается через прокси, например nginx, haproxy и т. Д.
app.behind.proxy = false


# IP адрес приложения (по умолчанию localhost)
http.addr =

# порт приложения
http.port = 9000

# Timeout определяет ограничение по времени для запроса (в секундах), сделанного одним клиентом.
# Нулевое значение тайм-аута означает отсутствие тайм-аута.
http.timeout.read = 90
http.timeout.write = 60


# For any cookies set by Revel (Session,Flash,Error) these properties will set
# the fields of:
# http://golang.org/pkg/net/http/#Cookie
#
# Each cookie set by Revel is prefixed with this string.
cookie.prefix = REVEL

# A secure cookie has the secure attribute enabled and is only used via HTTPS,
# ensuring that the cookie is always encrypted when transmitting from client to
# server. This makes the cookie less likely to be exposed to cookie theft via
# eavesdropping.
#
# Defaults to false. If 'http.ssl' is enabled, this will be defaulted to true.
# This should only be true when Revel is handling SSL connections. If you are
# using a proxy in front of revel (Nginx, Apache, etc), then this should be left
# as false.
# cookie.secure = false

# Limit cookie access to a given domain.
#cookie.domain =

# Define when your session cookie expires.
# Values:
# "720h"
#   A time duration (http://golang.org/pkg/time/#ParseDuration) after which
#   the cookie expires and the session is invalid.
# "session"
#   Sets a session cookie which invalidates the session when the user close
#   the browser.
session.expires = 720h


# The date format used by Revel. Possible formats defined by the Go `time`
# package (http://golang.org/pkg/time/#Parse)
format.date     = 2006-01-02
format.datetime = 2006-01-02 15:04


# Determines whether the template rendering should use chunked encoding.
# Chunked encoding can decrease the time to first byte on the client side by
# sending data before the entire template has been fully rendered.
results.chunked = false

# Compression of your HTML and CSS files with gzip typically saves around 
# fifty to seventy percent of the file size. This means that it takes less 
# time to load your pages, and less bandwidth is used over all. 
# To enable compression, set value to true.
results.compressed = false



# The default language of this application.
i18n.default_language = en

# The default format when message is missing.
# The original message shows in %s
#i18n.unknown_format = "??? %s ???"


# Module to serve static content such as CSS, JavaScript and Media files
# Allows Routes like this:
#  `Static.ServeModule("modulename","public")`
module.static = github.com/revel/modules/static

# Настройки подключения к бд
db.spec = 127.0.0.1:5432/library?sslmode=disable
db.user = postgres
db.password = 123

# Настройки авторизации (минуты)
session.expirationDuration = 1
session.cleanupInterval = 2

################################################################################

# Раздел: dev
# Этот раздел оценивается при запуске Revel в режиме разработки. Например:
# `revel run path/to/myapp`
[dev]

# Это устанавливает `revel.DevMode` для использования в приложении.
# Пример:
# ʻIf revel.DevMode {...} `
# или в ваших шаблонах с
# ''
# Значение:
# "true"
# Устанавливает DevMode в значение true.
# "false"
# Устанавливает DevMode в значение false.
mode.dev = true


# Форматированный вывод JSON/XML при вызове RenderJSON/RenderXML
# Значение:
#   "true"
# Обеспечивает форматированный вывод.
#   "false"
# Отключает форматированный вывод.
results.pretty = true


# Следите за изменениями в файлах приложения и автоматически пересобираться
# Значение:
#   "true"
# Включает автоматическое пересобирание.
#   "false"
# Отключает автоматическое пересобирание.
watch = true


# Определите, когда нужно восстанавливать новые изменения.
# Значение:
#   "normal" - Пересобрать при получении нового запроса и обнаружении изменений.
#   "eager"  - Пересобрать, как только будут обнаружены изменения.
watch.mode = eager

# Watch the entire `$GOPATH` for changes.
# Values:
# "true"
#   Includes `$GOPATH` in watch path.
# "false"
#   Excludes `$GOPATH` from watch path. Default value.
#watch.gopath = true


# Module to run code tests in the browser
# See:
#   http://revel.github.io/manual/testing.html
module.testrunner = github.com/revel/modules/testrunner


# Где регистрировать различные журналы Revel
# Ценности:
#   "off"
# Отключить вывод журнала.
#   "stdout"
# Вывод в стандартный вывод ОС.
#   "stderr"
# Вывод в стандартный вывод ошибок OS. Значение по умолчанию.
#   "relative/path/to/log"
# Вывод в файл.
log.all.filter.module.app = stdout    # Log all loggers for the application to the stdout
log.error.nfilter.module.app = stderr # Everything else that logs an error to stderr
log.crit.output = stderr              # Everything that logs something as critical goes to this

# Revel request access log
# Access log line format:
# INFO  21:53:55 static server-engine.go:169: Request Stats                             ip=127.0.0.1 path=/public/vendors/datatables.net-buttons/js/buttons.html5.min.js method=GET start=2017/08/31 21:53:55 status=200 duration_seconds=0.0002583 section=requestlog
log.request.output = stdout



################################################################################
# Section: prod
# This section is evaluated when running Revel in production mode. Like so:
#   `revel run path/to/myapp prod`
# See:
#  [dev] section for documentation of the various settings
[prod]

mode.dev = false

results.pretty = false

watch = false

module.testrunner =

log.warn.output  = log/%(app.name)s-warn.json    # Log all warn messages to file
log.error.output = log/%(app.name)s-error.json   # Log all errors to file
log.crit.output = log/%(app.name)s-critical.json # Log all critical to file

# Revel request access log (json format)
# Example:
#   log.request.output = %(app.name)s-request.json
log.request.output = log/%(app.name)s-requests.json
